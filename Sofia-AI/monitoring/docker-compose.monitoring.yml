version: '3.8'

# ===== SOFIA AI - PRODUCTION MONITORING STACK =====
# Include: Prometheus, Grafana, AlertManager, Node Exporter
# Usage: docker-compose -f docker-compose.monitoring.yml up -d

networks:
  monitoring:
    driver: bridge
  sofia-network:
    external: true

volumes:
  prometheus-data:
  grafana-data:
  alertmanager-data:

services:
  # ===== PROMETHEUS - METRICS COLLECTION =====
  prometheus:
    image: prom/prometheus:latest
    container_name: sofia-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
      - sofia-network

  # ===== GRAFANA - VISUALIZATION =====
  grafana:
    image: grafana/grafana:latest
    container_name: sofia-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=sofia-admin-2024
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - monitoring
    depends_on:
      - prometheus

  # ===== ALERT MANAGER - ALERTING =====
  alertmanager:
    image: prom/alertmanager:latest
    container_name: sofia-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    networks:
      - monitoring

  # ===== NODE EXPORTER - SYSTEM METRICS =====
  node-exporter:
    image: prom/node-exporter:latest
    container_name: sofia-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # ===== CADVISOR - CONTAINER METRICS =====
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: sofia-cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    networks:
      - monitoring

  # ===== UPTIME KUMA - UPTIME MONITORING =====
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: sofia-uptime-kuma
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - ./uptime-kuma:/app/data
    networks:
      - monitoring 